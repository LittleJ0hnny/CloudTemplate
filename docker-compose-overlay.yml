version: '3.7'

x-constants:
  log : &logEnv
    LOGSTASH_HOST: log-service
    LOGSTASH_PORT: 5000
  config: &configEnv
    CONFIG_APP_NAME: config-service
    CONFIG_HOST: config-service
    CONFIG_PORT: 8888
    CONFIG_USERNAME: configUser
    CONFIG_PASSWORD: configPassword
  discovery: &discEnv
    DISCOVERY_APP_NAME: discovery-service
    DISCOVERY_HOST: discovery-service
    DISCOVERY_CONFIG_FILE_NAME: discovery-service
    DISCOVERY_PORT: 8761
    DISCOVERY_USERNAME: discUser
    DISCOVERY_PASSWORD: discPassword
  gateway: &gatewayEnv
    GATEWAY_APP_NAME: gateway
    GATEWAY_HOST: gateway
    GATEWAY_CONFIG_FILE_NAME: gateway
    GATEWAY_PORT: 8100
  auth: &authEnv
    AUTH_APP_NAME: auth-service
    AUTH_HOST: auth-service
    AUTH_CONFIG_FILE_NAME: auth-service
    AUTH_PORT: 8200
  auth-db: &auth-dbEnv
    MYSQL_HOST: auth_db
    MYSQL_PORT: 3306
    MYSQL_DATABASE: cred_db
    MYSQL_USER: admin
    MYSQL_PASSWORD: admin
    MYSQL_ROOT_PASSWORD: root

services:
  log-service:
    container_name: log-service
    build:
      context: ./log-service
      dockerfile: Dockerfile
      args:
        bootstrapFile: bootstrap.sh
    image: log-service:latest
    ports:
      - "5601:5601"
      - "5000:5000"
    tty:
      true
    networks:
      - custom_overlay

  config-service:
    container_name: config-service
    build:
      context: ./config-service
      dockerfile: Dockerfile
      args:
        jarName: config-service
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
        logHost: log-service
        logPort: 5000
    image: config-service:latest
    ports:
      - "8888:8888"
    environment:
      <<: *logEnv
      <<: *configEnv
      <<: *discEnv
    tty:
      true
    networks:
      - custom_overlay

  discovery-service:
    container_name: discovery-service
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
      args:
        jarName: discovery-service
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
        logHost: log-service
        logPort: 5000
    image: discovery-service:latest
    ports:
      - "8761:8761"
    environment:
      <<: *logEnv
      <<: *configEnv
      <<: *discEnv
    tty:
      true
    depends_on:
      - config-service
    networks:
      - custom_overlay

  gateway:
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
      args:
        jarName: gateway
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
        logHost: log-service
        logPort: 5000
    image: gateway:latest
    ports:
      - "8100:8100"
    environment:
      <<: *logEnv
      <<: *configEnv
      <<: *discEnv
      <<: *gatewayEnv
      <<: *authEnv
    tty:
      true
    depends_on:
      - config-service
      - discovery-service
    networks:
      - custom_overlay

  auth_db:
    container_name: auth_db
    image: mysql/mysql-server:8.0.13
    ports:
      - "3306:3306"
    environment:
      <<: *auth-dbEnv
    tty:
      true
    depends_on:
      - config-service
      - discovery-service
      - gateway
    networks:
      - custom_overlay

  auth-service:
    container_name: auth-service
    build:
      context: ./auth-service
      dockerfile: Dockerfile
      args:
        jarName: auth-service
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
        logHost: log-service
        logPort: 5000
    image: auth-service:latest
    ports:
      - "8200:8200"
    environment:
      <<: *logEnv
      <<: *configEnv
      <<: *discEnv
      <<: *gatewayEnv
      <<: *authEnv
      <<: *auth-dbEnv
    tty:
      true
    depends_on:
      - config-service
      - discovery-service
      - gateway
      - auth_db
    networks:
      - custom_overlay

networks:
  custom_overlay:
    name: custom_overlay
    driver: overlay